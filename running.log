
metric type is maxed
abc command read data/library/mcnc.genlib
Entered genlib library with 23 gates from file "data/library/mcnc.genlib".
abc command read_blif vtr_benchmarks_blif/2/b1.blif
abc command print_stats
[1;37mtop                           :[0m i/o =    3/    4  lat =    0  nd =     8  edge =     14  cube =    10  lev = 3
the initial area is 17
abc command balance; rewrite; refactor; balance; rewrite; rewrite -z; balance; refactor -z; rewrite -z; balance
new area is 14
abc command balance; rewrite; refactor; balance; rewrite; rewrite -z; balance; refactor -z; rewrite -z; balance
new area is 15
the final area is 15
the network functionality is 3, and the network type is 3
threshold size = 4
0010
the total area: 15
the network functionality is 4, and the network type is 2
4
5
6
--- seed = 2844758185
--- getting CPM-one-cut
--- collecting mFFC
--- collecting LACs
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
--- sorting LACs
--- the number of candidate LACs is 6
# Creating MUXed CNF! ------------------------------ 
------- Adding MUX!
-------------- 1 (out of 6) MUXes finished
-------------- 2 (out of 6) MUXes finished
-------------- 3 (out of 6) MUXes finished
-------------- 4 (out of 6) MUXes finished
-------------- 5 (out of 6) MUXes finished
-------------- 6 (out of 6) MUXes finished
------- Strashing Original and MUXed Network!
original strash succeeded
muxed strash succeeded
------- Creating Miter!
------- Writing Miter Blif!
-------------- Miter is created successfully!
-------------- the number of PI in original network is 3
-------------- the number of PI in miter is 9
------- Adding Sorting Network!
the reduced area of all LAC candidates are listed as follows:
DArea: 7 mapped_area:7 DError0 FOM: 7e+10 SS name: pa, TS name: n13
DArea: 5 mapped_area:5 DError2 FOM: 2.5 SS name: n15, TS name: n8
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pc, TS name: n12
DArea: 1 mapped_area:1 DError0 FOM: 1e+10 SS name: pb, TS name: n10
DArea: 1 mapped_area:1 DError4 FOM: 0.25 SS name: n15, TS name: n11
DArea: 1 mapped_area:1 DError1 FOM: 1 SS name: n15, TS name: n14

------- Choosing the Least Valid Selection Signal!
----------- initial condition: left = 0; right = 16
----------- 1 round: left = 0; right = 16; pointer = 8
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =     9  po =     1  and =     169  lev =  21
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
----------- 2 round: left = 0; right = 7; pointer = 3
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =     9  po =     1  and =     163  lev =  21
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 3 round: left = 4; right = 7; pointer = 5
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =     9  po =     1  and =     163  lev =  21
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 4 round: left = 6; right = 7; pointer = 6
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =     9  po =     1  and =     163  lev =  21
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 5 round: left = 7; right = 7; pointer = 7
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =     9  po =     1  and =     169  lev =  21
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
---------- The least index of the valid selection signal is: 7
------- ANDing the Selection Signal with the Original Output!
------- Transforming to AIG!
---------- intermediate-results/Alexanderia_Final_Miter_AIG : pi =     9  po =     1  and =     169  lev =  21
------- Transforming to CNF!
------- Assigning PIIDs!
------- Writing Miter CNF!
# Solving Quantified SAT Problem! ------------------------------ 
------- Loading CNF to Depqbf!
------- Solving the Result!
---------- SAT!
The solution is:
s cnf 1 179 509
------- Calculating Total Recuded Area!
---------- calculate_total_reduced_area: reading the file!
---------- calculate_total_reduced_area: applying LACs!
n8 is replaced by zero
n12 is replaced by pc
n10 is replaced by pb
n18 is replaced by zero
n14 is replaced by zero
original area = 15 reduced area = 5
------- Clearing Memory!
------- Begin Verify!
------- Strashing Networks!
------- Creating Verify Miter!
------- Writing Verify Miter Blif!
-------------- Verify Miter is created successfully!
------- Transforming to AIG!
---------- intermediate-results/Alexanderia_Final_Miter_AIG : pi =     3  po =     1  and =      26  lev =  12
------- Transforming to CNF!
------- Assigning PIIDs for Verify Miter!
------- Writing Miter CNF!
# Solving Quantified SAT Problem! ------------------------------ 
------- Loading CNF to Depqbf!
------- Solving the Result!
---------- UNSAT!
The UNSAT core is:
s cnf 0 30 80
verify fails
------- Clearing Memory!
abc command read data/library/mcnc.genlib
Entered genlib library with 23 gates from file "data/library/mcnc.genlib".
abc command read_blif vtr_benchmarks_blif/3/5xp1.blif
abc command print_stats
[1;37mtop                           :[0m i/o =    7/   10  lat =    0  nd =    81  edge =    220  cube =   139  lev = 5
the initial area is 265
abc command balance; rewrite; refactor; balance; rewrite; rewrite -z; balance; refactor -z; rewrite -z; balance
new area is 207
abc command balance; rewrite; refactor; balance; rewrite; rewrite -z; balance; refactor -z; rewrite -z; balance
new area is 208
the final area is 208
the network functionality is 3, and the network type is 3
threshold size = 10
0010000000
the total area: 208
the network functionality is 4, and the network type is 2
4
5
6
--- seed = 384558890
--- getting CPM-one-cut
--- collecting mFFC
--- collecting LACs
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
errorboundint = 256
nframe = 100000
--- sorting LACs
--- the number of candidate LACs is 78
# Creating MUXed CNF! ------------------------------ 
------- Adding MUX!
-------------- 6 (out of 60) MUXes finished
-------------- 12 (out of 60) MUXes finished
-------------- 19 (out of 60) MUXes finished
-------------- 25 (out of 60) MUXes finished
-------------- 31 (out of 60) MUXes finished
-------------- 38 (out of 60) MUXes finished
-------------- 45 (out of 60) MUXes finished
-------------- 52 (out of 60) MUXes finished
-------------- 59 (out of 60) MUXes finished
------- Strashing Original and MUXed Network!
original strash succeeded
muxed strash succeeded
------- Creating Miter!
------- Writing Miter Blif!
-------------- Miter is created successfully!
-------------- the number of PI in original network is 7
-------------- the number of PI in miter is 67
------- Adding Sorting Network!
the reduced area of all LAC candidates are listed as follows:
DArea: 47 mapped_area:20 DError0 FOM: 4.7e+11 SS name: i_5_, TS name: n61
DArea: 38 mapped_area:17 DError0 FOM: 3.8e+11 SS name: i_6_, TS name: n90
DArea: 19 mapped_area:9 DError0 FOM: 1.9e+11 SS name: i_6_, TS name: n97
DArea: 19 mapped_area:9 DError0 FOM: 1.9e+11 SS name: i_5_, TS name: n36
DArea: 16 mapped_area:7 DError0 FOM: 1.6e+11 SS name: i_6_, TS name: n43
DArea: 16 mapped_area:7 DError0 FOM: 1.6e+11 SS name: i_5_, TS name: n83
DArea: 14 mapped_area:6 DError0 FOM: 1.4e+11 SS name: i_6_, TS name: n82
DArea: 14 mapped_area:6 DError0 FOM: 1.4e+11 SS name: i_1_, TS name: n96
DArea: 13 mapped_area:6 DError0 FOM: 1.3e+11 SS name: i_5_, TS name: n89
DArea: 13 mapped_area:6 DError0 FOM: 1.3e+11 SS name: i_5_, TS name: n66
DArea: 12 mapped_area:6 DError0 FOM: 1.2e+11 SS name: i_6_, TS name: n60
DArea: 12 mapped_area:6 DError0 FOM: 1.2e+11 SS name: i_1_, TS name: n74
DArea: 10 mapped_area:5 DError0 FOM: 1e+11 SS name: i_6_, TS name: n42
DArea: 8 mapped_area:4 DError0 FOM: 8e+10 SS name: i_6_, TS name: n54
DArea: 6 mapped_area:3 DError0 FOM: 6e+10 SS name: i_5_, TS name: n35
DArea: 6 mapped_area:3 DError0 FOM: 6e+10 SS name: i_5_, TS name: n27
DArea: 6 mapped_area:3 DError0 FOM: 6e+10 SS name: i_1_, TS name: n79
DArea: 6 mapped_area:3 DError0 FOM: 6e+10 SS name: i_5_, TS name: n87
DArea: 5 mapped_area:3 DError0 FOM: 5e+10 SS name: i_1_, TS name: n81
DArea: 5 mapped_area:3 DError80 FOM: 0.0625 SS name: n98, TS name: n69
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_5_, TS name: n85
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_3_, TS name: n95
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_6_, TS name: n51
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_6_, TS name: n49
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_3_, TS name: n48
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_6_, TS name: n65
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_3_, TS name: n72
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: n81, TS name: n73
DArea: 4 mapped_area:2 DError0 FOM: 4e+10 SS name: i_3_, TS name: n76
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: i_6_, TS name: n68
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: i_6_, TS name: n63
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: i_6_, TS name: n58
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: i_5_, TS name: n88
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: n32, TS name: n80
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: n21, TS name: n37
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: n63, TS name: n21
DArea: 3 mapped_area:2 DError2 FOM: 1.5 SS name: n98, TS name: n40
DArea: 3 mapped_area:2 DError0 FOM: 3e+10 SS name: n87, TS name: n25
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_6_, TS name: n84
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_1_, TS name: n75
DArea: 2 mapped_area:1 DError1 FOM: 2 SS name: n98, TS name: n34
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n21, TS name: n77
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n25, TS name: n78
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_3_, TS name: n33
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_3_, TS name: n32
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_2_, TS name: n31
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_5_, TS name: n29
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_1_, TS name: n52
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n65, TS name: n26
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_2_, TS name: n86
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n92, TS name: n24
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n67, TS name: n22
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n32, TS name: n91
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_3_, TS name: n92
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n25, TS name: n94
DArea: 2 mapped_area:1 DError2 FOM: 1 SS name: i_1_, TS name: n20
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_5_, TS name: n53
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_1_, TS name: n70
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: i_5_, TS name: n67
DArea: 2 mapped_area:1 DError0 FOM: 2e+10 SS name: n21, TS name: n56

------- Choosing the Least Valid Selection Signal!
----------- initial condition: left = 0; right = 189
----------- 1 round: left = 0; right = 189; pointer = 94
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    67  po =     1  and =    4499  lev =  49
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 2 round: left = 95; right = 189; pointer = 142
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    67  po =     1  and =    4491  lev =  49
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
----------- 3 round: left = 95; right = 141; pointer = 118
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    67  po =     1  and =    4559  lev =  49
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
----------- 4 round: left = 95; right = 117; pointer = 106
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    67  po =     1  and =    4531  lev =  49
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 5 round: left = 107; right = 117; pointer = 112
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    67  po =     1  and =    4549  lev =  49
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
----------- 6 round: left = 107; right = 111; pointer = 109
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    67  po =     1  and =    4541  lev =  49
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
----------- 7 round: left = 107; right = 108; pointer = 107
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    67  po =     1  and =    4539  lev =  49
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
---------- The least index of the valid selection signal is: 107
------- ANDing the Selection Signal with the Original Output!
------- Transforming to AIG!
---------- intermediate-results/Alexanderia_Final_Miter_AIG : pi =    67  po =     1  and =    4539  lev =  49
------- Transforming to CNF!
------- Assigning PIIDs!
------- Writing Miter CNF!
# Solving Quantified SAT Problem! ------------------------------ 
------- Loading CNF to Depqbf!
------- Solving the Result!
---------- SAT!
The solution is:
s cnf 1 4607 13619
------- Calculating Total Recuded Area!
---------- calculate_total_reduced_area: reading the file!
---------- calculate_total_reduced_area: applying LACs!
n61 is replaced by i_5_
n36 is replaced by i_5_
skipped
skipped
skipped
skipped
skipped
skipped
skipped
n73 is replaced by n81
skipped
n21 is replaced by n63
skipped
n25 is replaced by n87
skipped
skipped
skipped
skipped
skipped
skipped
skipped
skipped
n24 is replaced by n92
skipped
skipped
skipped
skipped
skipped
original area = 208 reduced area = 126
------- Clearing Memory!
------- Begin Verify!
------- Strashing Networks!
------- Creating Verify Miter!
------- Writing Verify Miter Blif!
-------------- Verify Miter is created successfully!
------- Transforming to AIG!
---------- intermediate-results/Alexanderia_Final_Miter_AIG : pi =     7  po =     1  and =     272  lev =  30
------- Transforming to CNF!
------- Assigning PIIDs for Verify Miter!
------- Writing Miter CNF!
# Solving Quantified SAT Problem! ------------------------------ 
------- Loading CNF to Depqbf!
------- Solving the Result!
---------- SAT!
The solution is:
s cnf 1 280 818
verify succeeds
------- Clearing Memory!
abc command read data/library/mcnc.genlib
Entered genlib library with 23 gates from file "data/library/mcnc.genlib".
abc command read_blif vtr_benchmarks_blif/3/b1.blif
abc command print_stats
[1;37mtop                           :[0m i/o =    3/    4  lat =    0  nd =     4  edge =      7  cube =     6  lev = 1
the initial area is 17
abc command balance; rewrite; refactor; balance; rewrite; rewrite -z; balance; refactor -z; rewrite -z; balance
new area is 17
the final area is 17
the network functionality is 3, and the network type is 3
threshold size = 4
0010
the total area: 17
the network functionality is 4, and the network type is 2
4
5
6
--- seed = 961301489
--- getting CPM-one-cut
--- collecting mFFC
--- collecting LACs
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
errorboundint = 4
nframe = 100000
--- sorting LACs
--- the number of candidate LACs is 7
# Creating MUXed CNF! ------------------------------ 
------- Adding MUX!
-------------- 1 (out of 7) MUXes finished
-------------- 2 (out of 7) MUXes finished
-------------- 3 (out of 7) MUXes finished
-------------- 4 (out of 7) MUXes finished
-------------- 5 (out of 7) MUXes finished
-------------- 6 (out of 7) MUXes finished
-------------- 7 (out of 7) MUXes finished
------- Strashing Original and MUXed Network!
original strash succeeded
muxed strash succeeded
------- Creating Miter!
------- Writing Miter Blif!
-------------- Miter is created successfully!
-------------- the number of PI in original network is 3
-------------- the number of PI in miter is 10
------- Adding Sorting Network!
the reduced area of all LAC candidates are listed as follows:
DArea: 10 mapped_area:10 DError4 FOM: 2.5 SS name: n16, TS name: n14
DArea: 5 mapped_area:5 DError2 FOM: 2.5 SS name: n16, TS name: n8
DArea: 4 mapped_area:4 DError0 FOM: 4e+10 SS name: pa, TS name: n13
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pa, TS name: n10
DArea: 1 mapped_area:1 DError4 FOM: 0.25 SS name: n16, TS name: n11
DArea: 1 mapped_area:1 DError4 FOM: 0.25 SS name: n16, TS name: n12
DArea: 1 mapped_area:1 DError1 FOM: 1 SS name: n16, TS name: n15

------- Choosing the Least Valid Selection Signal!
----------- initial condition: left = 0; right = 23
----------- 1 round: left = 0; right = 23; pointer = 11
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    10  po =     1  and =     214  lev =  20
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 2 round: left = 12; right = 23; pointer = 17
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    10  po =     1  and =     212  lev =  20
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
----------- 3 round: left = 12; right = 16; pointer = 14
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    10  po =     1  and =     216  lev =  20
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 4 round: left = 15; right = 16; pointer = 15
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    10  po =     1  and =     218  lev =  20
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 5 round: left = 16; right = 16; pointer = 16
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    10  po =     1  and =     218  lev =  20
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- SAT! updating right pointer
---------- The least index of the valid selection signal is: 16
------- ANDing the Selection Signal with the Original Output!
------- Transforming to AIG!
---------- intermediate-results/Alexanderia_Final_Miter_AIG : pi =    10  po =     1  and =     218  lev =  20
------- Transforming to CNF!
------- Assigning PIIDs!
------- Writing Miter CNF!
# Solving Quantified SAT Problem! ------------------------------ 
------- Loading CNF to Depqbf!
------- Solving the Result!
---------- SAT!
The solution is:
s cnf 1 229 656
------- Calculating Total Recuded Area!
---------- calculate_total_reduced_area: reading the file!
---------- calculate_total_reduced_area: applying LACs!
n8 is replaced by zero
n10 is replaced by pa
n15 is replaced by zero
original area = 17 reduced area = 9
------- Clearing Memory!
------- Begin Verify!
------- Strashing Networks!
------- Creating Verify Miter!
------- Writing Verify Miter Blif!
-------------- Verify Miter is created successfully!
------- Transforming to AIG!
---------- intermediate-results/Alexanderia_Final_Miter_AIG : pi =     3  po =     1  and =      33  lev =  13
------- Transforming to CNF!
------- Assigning PIIDs for Verify Miter!
------- Writing Miter CNF!
# Solving Quantified SAT Problem! ------------------------------ 
------- Loading CNF to Depqbf!
------- Solving the Result!
---------- SAT!
The solution is:
s cnf 1 37 101
verify succeeds
------- Clearing Memory!
abc command read data/library/mcnc.genlib
Entered genlib library with 23 gates from file "data/library/mcnc.genlib".
abc command read_blif vtr_benchmarks_blif/3/c8.blif
abc command print_stats
[1;37mtop                           :[0m i/o =   28/   18  lat =    0  nd =    61  edge =    170  cube =   121  lev = 5
the initial area is 265
abc command balance; rewrite; refactor; balance; rewrite; rewrite -z; balance; refactor -z; rewrite -z; balance
new area is 241
abc command balance; rewrite; refactor; balance; rewrite; rewrite -z; balance; refactor -z; rewrite -z; balance
new area is 245
the final area is 245
the network functionality is 3, and the network type is 3
threshold size = 18
001000000000000000
the total area: 245
the network functionality is 4, and the network type is 2
4
5
6
--- seed = 2504911598
--- getting CPM-one-cut
--- collecting mFFC
--- collecting LACs
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
errorboundint = 65536
nframe = 100000
--- sorting LACs
--- the number of candidate LACs is 108
# Creating MUXed CNF! ------------------------------ 
------- Adding MUX!
-------------- 6 (out of 60) MUXes finished
-------------- 12 (out of 60) MUXes finished
-------------- 19 (out of 60) MUXes finished
-------------- 25 (out of 60) MUXes finished
-------------- 31 (out of 60) MUXes finished
-------------- 38 (out of 60) MUXes finished
-------------- 45 (out of 60) MUXes finished
-------------- 52 (out of 60) MUXes finished
-------------- 59 (out of 60) MUXes finished
------- Strashing Original and MUXed Network!
original strash succeeded
muxed strash succeeded
------- Creating Miter!
------- Writing Miter Blif!
-------------- Miter is created successfully!
-------------- the number of PI in original network is 28
-------------- the number of PI in miter is 88
------- Adding Sorting Network!
the reduced area of all LAC candidates are listed as follows:
DArea: 18 mapped_area:18 DError0 FOM: 1.8e+11 SS name: pr, TS name: n144
DArea: 18 mapped_area:18 DError0 FOM: 1.8e+11 SS name: pa0, TS name: n154
DArea: 17 mapped_area:17 DError0 FOM: 1.7e+11 SS name: pr, TS name: n111
DArea: 17 mapped_area:17 DError0 FOM: 1.7e+11 SS name: pr, TS name: n128
DArea: 16 mapped_area:16 DError0 FOM: 1.6e+11 SS name: pq, TS name: n137
DArea: 16 mapped_area:16 DError0 FOM: 1.6e+11 SS name: pq, TS name: n120
DArea: 15 mapped_area:15 DError0 FOM: 1.5e+11 SS name: pr, TS name: n103
DArea: 15 mapped_area:15 DError0 FOM: 1.5e+11 SS name: pq, TS name: n96
DArea: 9 mapped_area:9 DError0 FOM: 9e+10 SS name: pb0, TS name: n157
DArea: 8 mapped_area:8 DError0 FOM: 8e+10 SS name: pp, TS name: n153
DArea: 8 mapped_area:8 DError0 FOM: 8e+10 SS name: pq, TS name: n127
DArea: 8 mapped_area:8 DError0 FOM: 8e+10 SS name: pq, TS name: n110
DArea: 8 mapped_area:8 DError0 FOM: 8e+10 SS name: pq, TS name: n143
DArea: 8 mapped_area:8 DError0 FOM: 8e+10 SS name: ps, TS name: n136
DArea: 8 mapped_area:8 DError0 FOM: 8e+10 SS name: ps, TS name: n119
DArea: 7 mapped_area:7 DError0 FOM: 7e+10 SS name: pq, TS name: n102
DArea: 6 mapped_area:6 DError0 FOM: 6e+10 SS name: pc0, TS name: n52
DArea: 6 mapped_area:6 DError0 FOM: 6e+10 SS name: pc0, TS name: n77
DArea: 6 mapped_area:6 DError0 FOM: 6e+10 SS name: pp, TS name: n87
DArea: 6 mapped_area:6 DError0 FOM: 6e+10 SS name: pc0, TS name: n67
DArea: 6 mapped_area:6 DError0 FOM: 6e+10 SS name: pq, TS name: n91
DArea: 5 mapped_area:5 DError0 FOM: 5e+10 SS name: pr, TS name: n123
DArea: 5 mapped_area:5 DError0 FOM: 5e+10 SS name: pr, TS name: n106
DArea: 5 mapped_area:5 DError0 FOM: 5e+10 SS name: pa0, TS name: n82
DArea: 5 mapped_area:5 DError0 FOM: 5e+10 SS name: py, TS name: n72
DArea: 5 mapped_area:5 DError0 FOM: 5e+10 SS name: pw, TS name: n62
DArea: 5 mapped_area:5 DError0 FOM: 5e+10 SS name: pc0, TS name: n57
DArea: 4 mapped_area:4 DError0 FOM: 4e+10 SS name: pr, TS name: n98
DArea: 4 mapped_area:4 DError0 FOM: 4e+10 SS name: pa0, TS name: n147
DArea: 4 mapped_area:4 DError2048 FOM: 0.00195312 SS name: n160, TS name: n104
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: pq, TS name: n117
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: px, TS name: n121
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: n115, TS name: n122
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: ps, TS name: n125
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: ps, TS name: n108
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: pw, TS name: n131
DArea: 3 mapped_area:3 DError1 FOM: 3 SS name: n159, TS name: n48
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: pq, TS name: n156
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: pq, TS name: n152
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: pa0, TS name: n149
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: ps, TS name: n142
DArea: 3 mapped_area:3 DError8 FOM: 0.375 SS name: n159, TS name: n66
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: pa0, TS name: n138
DArea: 3 mapped_area:3 DError0 FOM: 3e+10 SS name: pq, TS name: n134
DArea: 3 mapped_area:3 DError32 FOM: 0.09375 SS name: n159, TS name: n76
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pa0, TS name: n139
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pq, TS name: n140
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pq, TS name: n118
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pq, TS name: n135
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pb0, TS name: n145
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pr, TS name: n115
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pr, TS name: n113
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pq, TS name: n150
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pq, TS name: n155
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pr, TS name: n132
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pq, TS name: n126
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pq, TS name: n109
DArea: 2 mapped_area:2 DError0 FOM: 2e+10 SS name: pu, TS name: n105
DArea: 2 mapped_area:2 DError64 FOM: 0.03125 SS name: n159, TS name: n79
DArea: 2 mapped_area:2 DError64 FOM: 0.03125 SS name: n159, TS name: n81

------- Choosing the Least Valid Selection Signal!
----------- initial condition: left = 0; right = 342
----------- 1 round: left = 0; right = 342; pointer = 171
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    88  po =     1  and =    9935  lev =  56
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 2 round: left = 172; right = 342; pointer = 257
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    88  po =     1  and =    9921  lev =  56
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
-------------- updating boundaries
-------------- UNSAT! updating left pointer
----------- 3 round: left = 258; right = 342; pointer = 300
-------------- duplicating miter
-------------- duplicating sorted selection signals
-------------- updating output
-------------- writing duplicated miter blif
-------------- Transforming to AIG!
---------- intermediate-results/Final_Miter_DupAig : pi =    88  po =     1  and =    9557  lev =  56
-------------- Transforming to CNF!
-------------- Assigning PIIDs!
-------------- Writing Miter CNF!
-------------- reading cnf into depqbf
-------------- solving qsat
